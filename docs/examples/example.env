# ==============================================================================
# Example .env file
#
# To use this file place it at the project root and rename to: .env
#
# Whilst recommended to use a .env file to configure application environments
# locally, using these files and setting values within it will have no effect
# without them being applied to Docker container/images as part of a
# docker-compose.overrides.yml file
#
# ==============================================================================

# ==============================================================================
# System Wide Variables
#
# ==============================================================================

# Application Configuration
#
# APP_ENV:
#     [ Optional. Default: prod. Valid Values: dev, prod ]
#     The environment the application is running in.
APP_ENV=prod

# Domain Configuration
#
# DOMAIN:
#    [ Required. Expects: string ]
#    Define the domain traefik should route to nginx
DOMAIN=mysite.localhost

# Nginx Configuration
#
# NGINX_BROTLI_COMMIT:
#     [ Optional. Default: master ]
#     The commit reference of the brotli repository to use
#     To use latest commit from the master branch use value "master"
#     Commit references: https://github.com/google/ngx_brotli/commits/master
# NGINX_VERSION:
#     [ Optional. Default: 1.18.0 ]
#     The nginx version to install
#     Available versions: http://nginx.org/en/download.html
NGINX_BROTLI_COMMIT=master
NGINX_VERSION=1.18.0

# PHP Configuration
#
# PHP_OPCACHE_ENABLE
#     [ Optional. Default: 1. Valid Values: 0, 1 ]
#     Enables/Disable the opcache plugin
# PHP_OPCACHE_REVALIDATE_FREQ
#     [ Optional. Default: 0 ]
#     How often in seconds should the cache expire and code be checked for changes?
#     A value of 0 causes cache to be checked on every request.
#     Recommended to leave at 0 across all environments. See PHP_OPCACHE_VALIDATE_TIMESTAMPS
# PHP_OPCACHE_VALIDATE_TIMESTAMPS
#     [ Optional. Default: 0. Valid Values: 0, 1 ]
#     Enables/Disables checking of timestamps for updated files per PHP_OPCACHE_REVALIDATE_FREQ setting
#     When disabled PHP_OPCACHE_REVALIDATE_FREQ is ignored and cached PHP files are NEVER checked for updated code.
#     To have code changes updated when this setting is disabled PHP must be restarted.
#     Recommended to use this value only to alter Opcache state per environment setting it to:
#         1 in development, so cached files are checked every PHP_OPCACHE_REVALIDATE_FREQ
#         2 in production, no updating of cached files, what's built into the container is what is served.
# PHP_OPCACHE_MAX_ACCELERATED_FILES
#    [ Optional. Default: 15000 ]
#    Controls how many PHP files can be help in memory at once.
#    Number of php files in the project can be determined by: ./bin/ddl php:num-files
# PHP_OPCACHE_MEMEORY_CONSUMPTION
#    [ Optional. Default: 256 ]
#    How much memory in MB is available to opcache
# PHP_OPCACHE_MAX_WASTED_PERCENTAGE
#    [ Optional. Default: 10 ]
#    Percentage of waster space within opcache memory necessary to trigger a restart/recache.
# PHP_OPCACHE_INTERNED_STRINGS_BUFFER
#    [ Optional. Default: 16 ]
#    The size of the buffer in MB to store interned strings.
#    Interned string essentially being a single pointer to a shared string value across the codebase
# PHP_OPCACHE_FAST_SHUTDOWN
#    [ Optional. Default: 1. Valid Values: 0, 1]
#    Attempts to speed up reponses from php and recycle php words ready for the next request
PHP_OPCACHE_ENABLE=1
PHP_OPCACHE_REVALIDATE_FREQ=0
PHP_OPCACHE_VALIDATE_TIMESTAMPS=0
PHP_OPCACHE_MAX_ACCELERATED_FILES=15000
PHP_OPCACHE_MEMEORY_CONSUMPTION=256
PHP_OPCACHE_MAX_WASTED_PERCENTAGE=10
PHP_OPCACHE_INTERNED_STRINGS_BUFFER=16
PHP_OPCACHE_FAST_SHUTDOWN=1
